c语言：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* swapPairs(struct ListNode* head){
    if(head==NULL ||head->next==NULL)   return head;
    struct ListNode *dummyHead = (struct ListNode*)malloc(sizeof(struct ListNode));
    struct ListNode *temp = (struct ListNode*)malloc(sizeof(struct ListNode));
    dummyHead->next = head;
    struct ListNode* pre = dummyHead;
    struct ListNode* cur = head;
    struct ListNode* next = head->next;
    while(cur!=NULL && next!=NULL){
        temp = next->next;
        pre->next = next;
        next->next = cur;
        cur->next = temp;
        pre = pre->next->next;
        cur = pre->next;
        next = cur==NULL?NULL:cur->next;
    }
    return dummyHead->next;
}


java:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head==null || head.next==null)   return head;
        ListNode dummyNode = new ListNode(0);
        dummyNode.next = head;
        ListNode pre = dummyNode, cur = head, next = head.next;
        while(cur!=null && next!=null){
            ListNode temp = next.next;
            pre.next = next;   //pre->next
            next.next =cur;   //pre->next->cur
            cur.next = temp;  //pre->next->cur->temp
            pre = pre.next.next;
            cur = pre.next;
            next = cur==null?null:cur.next;
        }
        return dummyNode.next;
    }
}
