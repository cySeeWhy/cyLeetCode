java:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0) return null;
        if(lists.length==1) return lists[0];
        if(lists.length==2) return mergeTwoLists(lists[0], lists[1]);
        ListNode[] lists1 = {lists[0]};
        ListNode[] lists2 = new ListNode[lists.length-1];
        for(int i=1;i<lists.length;i++){
            lists2[i-1] = lists[i];
        }
        return mergeTwoLists(mergeKLists(lists1), mergeKLists(lists2));
    }
    public ListNode mergeTwoLists(ListNode l1, ListNode l2){
        if(l1==null)    return l2;
        if(l2==null)    return l1;
        if(l1.val<l2.val){
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }else{
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }
    }
}
