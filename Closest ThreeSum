c语言:
#define ABS(a) ((a)<0?(-1*a):(a))
//手写一个快排压压惊。
void sortArray(int* nums, int lo, int hi){
    if(lo<hi){
        int p = position(nums, lo, hi);
        sortArray(nums, lo, p-1);
        sortArray(nums, p+1, hi);
    }
}

int position(int* nums, int lo, int hi){
    int i = lo, j = hi;
    int temp = nums[i];
    while(i<j){
        while(i<j && nums[j]>=temp)     j--;
        nums[i] = nums[j];
        while(i<j && nums[i]<=temp)     i++;
        nums[j] = nums[i];
    }
    nums[i] = temp;
    return i;
}

int threeSumClosest(int* nums, int numsSize, int target){
    sortArray(nums, 0, numsSize-1);
    int res = nums[0]+nums[1]+nums[2];
    for(int i=0;i<numsSize-2;i++){
        int j = i+1;
        int k = numsSize-1;
        while(j<k){
            int sum = nums[i]+nums[j]+nums[k];
            if(sum==target)     return target;
            if(abs((sum-target))<abs((res-target)))     res = sum;
            if(sum<target)      j++;
            if(sum>target)      k--;
        }
    }
    return res;
}



java:
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int res = nums[0]+nums[1]+nums[2];
        for(int i=0;i<nums.length-2;i++){
            int j =i+1;
            int k = nums.length-1;
            while(j<k){
                int sum = nums[i]+nums[j]+nums[k];
                if(sum==target)     return target;
                if(Math.abs(sum-target)<Math.abs(res-target))
                        res = sum;
                if(sum<target){
                    j++;
                }
                if(sum>target){
                    k--;
                }
            }
        }
        return res;
    }
}
