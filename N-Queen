class Solution {
    public List<List<String>> solveNQueens(int n) {
        List<List<String>> res = new ArrayList<>();
        if(n==0)    return res;
        int[] arr = new int[n];
        putQueen(res, arr, n, 0);
        return res;
    }
    public void putQueen(List<List<String>> res, int[] arr, int n, int row){
        if(row==n){
            List<String> temp = new ArrayList<>();
            for(int i=0;i<n;i++){
                StringBuilder sb = new StringBuilder();
                for(int j=0;j<n;j++){
                    if(arr[i]==j){
                        sb.append("Q");
                    }else{
                        sb.append(".");
                    }
                }
                temp.add(sb.toString());
            }
            res.add(temp);
            return;
        }
        for(int i=0;i<n;i++){
            arr[row] = i;
            if(isValid(arr, row)){
                putQueen(res, arr, n, row+1);
            }
        }
    }
    public boolean isValid(int[] arr, int row){
        for(int i=0;i<row;i++){
            if(arr[i]==arr[row] || Math.abs(i-row)==Math.abs(arr[i]-arr[row]))
                return false;
        }
        return true;
    }
}
